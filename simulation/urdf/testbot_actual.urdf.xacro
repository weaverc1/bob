<?xml version="1.0"?>
<!--
  Actual Testbot URDF - Based on Existing Turtlebot Platform
  Source: c:/dev/ros2_ws/src/turtlebot_controller/urdf/turtlebot.urdf

  This is the ACTUAL indoor test platform that will be used for development
  and validation before scaling up to the full-size lawn mower.
-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="testbot">

  <!-- Properties extracted from actual hardware -->
  <xacro:property name="base_length" value="0.250"/>  <!-- meters -->
  <xacro:property name="base_width" value="0.160"/>
  <xacro:property name="base_height" value="0.05"/>
  <xacro:property name="base_offset_x" value="-0.090"/>  <!-- COM offset -->

  <xacro:property name="wheel_radius" value="0.0335"/>  <!-- 33.5mm -->
  <xacro:property name="wheel_width" value="0.02"/>     <!-- 20mm -->
  <xacro:property name="wheelbase" value="0.135"/>      <!-- 2 * 0.0675 = 135mm between wheels -->

  <xacro:property name="base_mass" value="0.875"/>  <!-- kg -->
  <xacro:property name="wheel_mass" value="0.1"/>
  <xacro:property name="caster_mass" value="0.05"/>

  <xacro:property name="caster_radius" value="0.015"/>
  <xacro:property name="caster_offset_x" value="-0.180"/>
  <xacro:property name="caster_offset_z" value="-0.035"/>

  <!-- Materials -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <!-- World link (root) -->
  <link name="odom"/>

  <!-- Base Link -->
  <joint name="odom_joint" type="fixed">
    <parent link="odom"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <origin xyz="${base_offset_x} 0 0" rpy="0 0 0"/>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <origin xyz="${base_offset_x} 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="${base_mass}"/>
      <origin xyz="${base_offset_x} 0 0" rpy="0 0 0"/>
      <inertia
        ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0"
        izz="0.001"/>
    </inertial>
  </link>

  <!-- Left Wheel -->
  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="0.00001" ixy="0.0" ixz="0.0"
        iyy="0.00001" iyz="0.0"
        izz="0.00001"/>
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 ${wheelbase/2} 0" rpy="-1.5708 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Right Wheel -->
  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="0.00001" ixy="0.0" ixz="0.0"
        iyy="0.00001" iyz="0.0"
        izz="0.00001"/>
    </inertial>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0 ${-wheelbase/2} 0" rpy="1.5708 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Caster Wheel -->
  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${caster_mass}"/>
      <inertia
        ixx="0.000001" ixy="0.0" ixz="0.0"
        iyy="0.000001" iyz="0.0"
        izz="0.000001"/>
    </inertial>
  </link>

  <joint name="caster_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="${caster_offset_x} 0 ${caster_offset_z}"/>
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.02 0.02 0.01"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <inertia
        ixx="0.00001" ixy="0.0" ixz="0.0"
        iyy="0.00001" iyz="0.0"
        izz="0.00001"/>
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.200 0 0.025"/>
  </joint>

  <!-- LIDAR -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.035"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia
        ixx="0.00001" ixy="0.0" ixz="0.0"
        iyy="0.00001" iyz="0.0"
        izz="0.00001"/>
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="-0.1 0 0.046"/>
  </joint>

  <!-- Gazebo plugins will be added here -->
  <!--
  TODO by Controller & Plugin Integrator agent:
  - Add gazebo_ros_diff_drive plugin
  - Add gazebo_ros_imu_sensor plugin
  - Add gazebo_ros_ray_sensor (lidar) plugin
  - Configure ros2_control hardware interface
  -->

</robot>
